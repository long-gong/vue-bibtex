'use strict';

exports.__esModule = true;

var _nodeBuilder = require('../node-builder');

var _esotope = require('../tools/esotope');

var _instrumented = require('../instrumented');

// Transform:
// obj.method(args...); obj[method](args...); -->
// _call$(obj, 'method', args...); _call$(obj, method, args...);

exports.default = {
    nodeReplacementRequireTransform: true,

    nodeTypes: [_esotope.Syntax.CallExpression],

    condition: node => {
        const callee = node.callee;

        if (callee.type === _esotope.Syntax.MemberExpression) {
            if (callee.computed) return callee.property.type === _esotope.Syntax.Literal ? (0, _instrumented.shouldInstrumentMethod)(callee.property.value) : true;

            return (0, _instrumented.shouldInstrumentMethod)(callee.property.name);
        }

        return false;
    },

    run: node => {
        const callee = node.callee;
        const method = callee.computed ? callee.property : (0, _nodeBuilder.createStringLiteral)(callee.property.name);

        return (0, _nodeBuilder.createMethCallWrapper)(callee.object, method, node.arguments);
    }
}; // -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------

module.exports = exports['default'];