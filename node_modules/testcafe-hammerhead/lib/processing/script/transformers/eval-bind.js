'use strict';

exports.__esModule = true;

var _nodeBuilder = require('../node-builder');

var _esotope = require('../tools/esotope');

var _replaceNode = require('./replace-node');

var _replaceNode2 = _interopRequireDefault(_replaceNode);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Transform:
// foo = eval.bind(...); -->
// foo = __get$Eval(eval).bind(...);

exports.default = {
    nodeReplacementRequireTransform: false,

    nodeTypes: [_esotope.Syntax.CallExpression],

    condition: node => {
        if (node.callee.type === _esotope.Syntax.MemberExpression && node.callee.property.name === 'bind') {
            const obj = node.callee.object;

            // obj.eval.bind(), obj[eval].bind(),
            if (obj.type === _esotope.Syntax.MemberExpression && (obj.property.value || obj.property.name) === 'eval') return true;

            // eval.bind()
            if (obj.name === 'eval') return true;
        }

        return false;
    },

    run: node => {
        const getEvalNode = (0, _nodeBuilder.createGetEvalMethCall)(node.callee.object);

        (0, _replaceNode2.default)(node.callee.object, getEvalNode, node.callee, 'object');

        return null;
    }
}; // -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------

module.exports = exports['default'];