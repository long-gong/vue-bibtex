'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default').default;

exports.__esModule = true;

var _osFamily = require('os-family');

var _osFamily2 = _interopRequireDefault(_osFamily);

var _readFileRelative = require('read-file-relative');

var _linuxPlatformInfo = require('linux-platform-info');

var BINARIES = void 0;

if (_osFamily2.default.win) {
    BINARIES = {
        findWindow: _readFileRelative.toAbsPath('../bin/win/find-window.exe'),
        getWindowSize: _readFileRelative.toAbsPath('../bin/win/get-window-size.exe'),
        close: _readFileRelative.toAbsPath('../bin/win/close.exe'),
        screenshot: _readFileRelative.toAbsPath('../bin/win/screenshot.exe'),
        generateThumbnail: _readFileRelative.toAbsPath('../bin/win/generate-thumbnail.exe'),
        resize: _readFileRelative.toAbsPath('../bin/win/resize.exe'),
        maximize: _readFileRelative.toAbsPath('../bin/win/maximize.exe'),
        bringToFront: _readFileRelative.toAbsPath('../bin/win/bring-to-front.exe')
    };
} else if (_osFamily2.default.mac) {
    BINARIES = {
        open: _readFileRelative.toAbsPath('../bin/mac/open.scpt'),
        findWindow: _readFileRelative.toAbsPath('../bin/mac/find-window'),
        getWindowSize: _readFileRelative.toAbsPath('../bin/mac/get-window-size'),
        getWindowBounds: _readFileRelative.toAbsPath('../bin/mac/get-window-bounds'),
        getWindowMaxBounds: _readFileRelative.toAbsPath('../bin/mac/get-window-max-bounds'),
        setWindowBounds: _readFileRelative.toAbsPath('../bin/mac/set-window-bounds'),
        close: _readFileRelative.toAbsPath('../bin/mac/close'),
        screenshot: _readFileRelative.toAbsPath('../bin/mac/screenshot'),
        resize: _readFileRelative.toAbsPath('../bin/mac/resize'),
        generateThumbnail: _readFileRelative.toAbsPath('../bin/mac/generate-thumbnail'),
        bringToFront: _readFileRelative.toAbsPath('../bin/mac/bring-to-front')
    };
} else if (_osFamily2.default.linux) {
    BINARIES = {
        findWindow: _readFileRelative.toAbsPath('../bin/linux/' + _linuxPlatformInfo.platform + '/find-window'),
        close: _readFileRelative.toAbsPath('../bin/linux/' + _linuxPlatformInfo.platform + '/close'),
        getWindowSize: _readFileRelative.toAbsPath('../bin/linux/' + _linuxPlatformInfo.platform + '/get-window-size'),
        resize: _readFileRelative.toAbsPath('../bin/linux/' + _linuxPlatformInfo.platform + '/resize'),
        maximize: _readFileRelative.toAbsPath('../bin/linux/' + _linuxPlatformInfo.platform + '/maximize'),
        screenshot: _readFileRelative.toAbsPath('../bin/linux/' + _linuxPlatformInfo.platform + '/screenshot'),
        generateThumbnail: _readFileRelative.toAbsPath('../bin/linux/' + _linuxPlatformInfo.platform + '/generate-thumbnail')
    };
} else BINARIES = {};

exports.default = BINARIES;
module.exports = exports.default;