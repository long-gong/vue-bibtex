'use strict';

exports.__esModule = true;
exports.default = createStackFilter;

var _path = require('path');

var _lodash = require('lodash');

const BABEL = require.resolve('babel-core');
const BABEL_MODULES_DIR = BABEL.replace(new RegExp(`^(.*${(0, _lodash.escapeRegExp)(_path.sep)}node_modules${(0, _lodash.escapeRegExp)(_path.sep)})(.*)`), '$1');

const BABEL_RELATED = BABEL_MODULES_DIR + 'babel-';
const BABYLON = BABEL_MODULES_DIR + 'babylon' + _path.sep;
const CORE_JS = BABEL_MODULES_DIR + 'core-js' + _path.sep;
const REGENERATOR_RUNTIME = BABEL_MODULES_DIR + 'regenerator-runtime' + _path.sep;

const TESTCAFE_LIB = (0, _path.join)(__dirname, '../');
const TESTCAFE_BIN = (0, _path.join)(__dirname, '../../bin');
const TESTCAFE_HAMMERHEAD = `${_path.sep}testcafe-hammerhead${_path.sep}`;

const SOURCE_MAP_SUPPORT = `${_path.sep}source-map-support${_path.sep}`;

const INTERNAL = 'internal/';

function createStackFilter(limit) {
    let passedFramesCount = 0;

    return function stackFilter(frame) {
        if (passedFramesCount >= limit) return false;

        const filename = frame.getFileName();

        // NOTE: filter out the internals of node, Babel and TestCafe
        const pass = filename && filename.indexOf(_path.sep) > -1 && filename.indexOf(INTERNAL) !== 0 && filename.indexOf(TESTCAFE_LIB) !== 0 && filename.indexOf(TESTCAFE_BIN) !== 0 && filename.indexOf(TESTCAFE_HAMMERHEAD) < 0 && filename.indexOf(BABEL_RELATED) !== 0 && filename.indexOf(BABYLON) !== 0 && filename.indexOf(CORE_JS) !== 0 && filename.indexOf(REGENERATOR_RUNTIME) !== 0 && filename.indexOf(SOURCE_MAP_SUPPORT) < 0;

        if (pass) passedFramesCount++;

        return pass;
    };
}
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lcnJvcnMvY3JlYXRlLXN0YWNrLWZpbHRlci5qcyJdLCJuYW1lcyI6WyJjcmVhdGVTdGFja0ZpbHRlciIsIkJBQkVMIiwicmVxdWlyZSIsInJlc29sdmUiLCJCQUJFTF9NT0RVTEVTX0RJUiIsInJlcGxhY2UiLCJSZWdFeHAiLCJzZXAiLCJCQUJFTF9SRUxBVEVEIiwiQkFCWUxPTiIsIkNPUkVfSlMiLCJSRUdFTkVSQVRPUl9SVU5USU1FIiwiVEVTVENBRkVfTElCIiwiX19kaXJuYW1lIiwiVEVTVENBRkVfQklOIiwiVEVTVENBRkVfSEFNTUVSSEVBRCIsIlNPVVJDRV9NQVBfU1VQUE9SVCIsIklOVEVSTkFMIiwibGltaXQiLCJwYXNzZWRGcmFtZXNDb3VudCIsInN0YWNrRmlsdGVyIiwiZnJhbWUiLCJmaWxlbmFtZSIsImdldEZpbGVOYW1lIiwicGFzcyIsImluZGV4T2YiXSwibWFwcGluZ3MiOiI7OztrQkFtQndCQSxpQjs7QUFuQnhCOztBQUNBOztBQUVBLE1BQU1DLFFBQW9CQyxRQUFRQyxPQUFSLENBQWdCLFlBQWhCLENBQTFCO0FBQ0EsTUFBTUMsb0JBQW9CSCxNQUFNSSxPQUFOLENBQWMsSUFBSUMsTUFBSixDQUFZLE9BQU0sMEJBQVNDLFNBQVQsQ0FBYyxlQUFjLDBCQUFTQSxTQUFULENBQWMsT0FBNUQsQ0FBZCxFQUFtRixJQUFuRixDQUExQjs7QUFFQSxNQUFNQyxnQkFBc0JKLG9CQUFvQixRQUFoRDtBQUNBLE1BQU1LLFVBQXNCTCxvQkFBb0IsU0FBcEIsR0FBZ0NHLFNBQTVEO0FBQ0EsTUFBTUcsVUFBc0JOLG9CQUFvQixTQUFwQixHQUFnQ0csU0FBNUQ7QUFDQSxNQUFNSSxzQkFBc0JQLG9CQUFvQixxQkFBcEIsR0FBNENHLFNBQXhFOztBQUVBLE1BQU1LLGVBQXNCLGdCQUFLQyxTQUFMLEVBQWdCLEtBQWhCLENBQTVCO0FBQ0EsTUFBTUMsZUFBc0IsZ0JBQUtELFNBQUwsRUFBZ0IsV0FBaEIsQ0FBNUI7QUFDQSxNQUFNRSxzQkFBdUIsR0FBRVIsU0FBSSxzQkFBcUJBLFNBQUksRUFBNUQ7O0FBRUEsTUFBTVMscUJBQXNCLEdBQUVULFNBQUkscUJBQW9CQSxTQUFJLEVBQTFEOztBQUVBLE1BQU1VLFdBQVcsV0FBakI7O0FBRWUsU0FBU2pCLGlCQUFULENBQTRCa0IsS0FBNUIsRUFBbUM7QUFDOUMsUUFBSUMsb0JBQW9CLENBQXhCOztBQUVBLFdBQU8sU0FBU0MsV0FBVCxDQUFzQkMsS0FBdEIsRUFBNkI7QUFDaEMsWUFBSUYscUJBQXFCRCxLQUF6QixFQUNJLE9BQU8sS0FBUDs7QUFFSixjQUFNSSxXQUFXRCxNQUFNRSxXQUFOLEVBQWpCOztBQUVBO0FBQ0EsY0FBTUMsT0FBT0YsWUFDRkEsU0FBU0csT0FBVCxDQUFpQmxCLFNBQWpCLElBQXdCLENBQUMsQ0FEdkIsSUFFRmUsU0FBU0csT0FBVCxDQUFpQlIsUUFBakIsTUFBK0IsQ0FGN0IsSUFHRkssU0FBU0csT0FBVCxDQUFpQmIsWUFBakIsTUFBbUMsQ0FIakMsSUFJRlUsU0FBU0csT0FBVCxDQUFpQlgsWUFBakIsTUFBbUMsQ0FKakMsSUFLRlEsU0FBU0csT0FBVCxDQUFpQlYsbUJBQWpCLElBQXdDLENBTHRDLElBTUZPLFNBQVNHLE9BQVQsQ0FBaUJqQixhQUFqQixNQUFvQyxDQU5sQyxJQU9GYyxTQUFTRyxPQUFULENBQWlCaEIsT0FBakIsTUFBOEIsQ0FQNUIsSUFRRmEsU0FBU0csT0FBVCxDQUFpQmYsT0FBakIsTUFBOEIsQ0FSNUIsSUFTRlksU0FBU0csT0FBVCxDQUFpQmQsbUJBQWpCLE1BQTBDLENBVHhDLElBVUZXLFNBQVNHLE9BQVQsQ0FBaUJULGtCQUFqQixJQUF1QyxDQVZsRDs7QUFZQSxZQUFJUSxJQUFKLEVBQ0lMOztBQUVKLGVBQU9LLElBQVA7QUFDSCxLQXZCRDtBQXdCSCIsImZpbGUiOiJlcnJvcnMvY3JlYXRlLXN0YWNrLWZpbHRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlcCwgam9pbiB9IGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgZXNjYXBlUmVnRXhwIGFzIGVzY2FwZVJlIH0gZnJvbSAnbG9kYXNoJztcblxuY29uc3QgQkFCRUwgICAgICAgICAgICAgPSByZXF1aXJlLnJlc29sdmUoJ2JhYmVsLWNvcmUnKTtcbmNvbnN0IEJBQkVMX01PRFVMRVNfRElSID0gQkFCRUwucmVwbGFjZShuZXcgUmVnRXhwKGBeKC4qJHtlc2NhcGVSZShzZXApfW5vZGVfbW9kdWxlcyR7ZXNjYXBlUmUoc2VwKX0pKC4qKWApLCAnJDEnKTtcblxuY29uc3QgQkFCRUxfUkVMQVRFRCAgICAgICA9IEJBQkVMX01PRFVMRVNfRElSICsgJ2JhYmVsLSc7XG5jb25zdCBCQUJZTE9OICAgICAgICAgICAgID0gQkFCRUxfTU9EVUxFU19ESVIgKyAnYmFieWxvbicgKyBzZXA7XG5jb25zdCBDT1JFX0pTICAgICAgICAgICAgID0gQkFCRUxfTU9EVUxFU19ESVIgKyAnY29yZS1qcycgKyBzZXA7XG5jb25zdCBSRUdFTkVSQVRPUl9SVU5USU1FID0gQkFCRUxfTU9EVUxFU19ESVIgKyAncmVnZW5lcmF0b3ItcnVudGltZScgKyBzZXA7XG5cbmNvbnN0IFRFU1RDQUZFX0xJQiAgICAgICAgPSBqb2luKF9fZGlybmFtZSwgJy4uLycpO1xuY29uc3QgVEVTVENBRkVfQklOICAgICAgICA9IGpvaW4oX19kaXJuYW1lLCAnLi4vLi4vYmluJyk7XG5jb25zdCBURVNUQ0FGRV9IQU1NRVJIRUFEID0gYCR7c2VwfXRlc3RjYWZlLWhhbW1lcmhlYWQke3NlcH1gO1xuXG5jb25zdCBTT1VSQ0VfTUFQX1NVUFBPUlQgPSBgJHtzZXB9c291cmNlLW1hcC1zdXBwb3J0JHtzZXB9YDtcblxuY29uc3QgSU5URVJOQUwgPSAnaW50ZXJuYWwvJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlU3RhY2tGaWx0ZXIgKGxpbWl0KSB7XG4gICAgbGV0IHBhc3NlZEZyYW1lc0NvdW50ID0gMDtcblxuICAgIHJldHVybiBmdW5jdGlvbiBzdGFja0ZpbHRlciAoZnJhbWUpIHtcbiAgICAgICAgaWYgKHBhc3NlZEZyYW1lc0NvdW50ID49IGxpbWl0KVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgICAgIGNvbnN0IGZpbGVuYW1lID0gZnJhbWUuZ2V0RmlsZU5hbWUoKTtcblxuICAgICAgICAvLyBOT1RFOiBmaWx0ZXIgb3V0IHRoZSBpbnRlcm5hbHMgb2Ygbm9kZSwgQmFiZWwgYW5kIFRlc3RDYWZlXG4gICAgICAgIGNvbnN0IHBhc3MgPSBmaWxlbmFtZSAmJlxuICAgICAgICAgICAgICAgICAgIGZpbGVuYW1lLmluZGV4T2Yoc2VwKSA+IC0xICYmXG4gICAgICAgICAgICAgICAgICAgZmlsZW5hbWUuaW5kZXhPZihJTlRFUk5BTCkgIT09IDAgJiZcbiAgICAgICAgICAgICAgICAgICBmaWxlbmFtZS5pbmRleE9mKFRFU1RDQUZFX0xJQikgIT09IDAgJiZcbiAgICAgICAgICAgICAgICAgICBmaWxlbmFtZS5pbmRleE9mKFRFU1RDQUZFX0JJTikgIT09IDAgJiZcbiAgICAgICAgICAgICAgICAgICBmaWxlbmFtZS5pbmRleE9mKFRFU1RDQUZFX0hBTU1FUkhFQUQpIDwgMCAmJlxuICAgICAgICAgICAgICAgICAgIGZpbGVuYW1lLmluZGV4T2YoQkFCRUxfUkVMQVRFRCkgIT09IDAgJiZcbiAgICAgICAgICAgICAgICAgICBmaWxlbmFtZS5pbmRleE9mKEJBQllMT04pICE9PSAwICYmXG4gICAgICAgICAgICAgICAgICAgZmlsZW5hbWUuaW5kZXhPZihDT1JFX0pTKSAhPT0gMCAmJlxuICAgICAgICAgICAgICAgICAgIGZpbGVuYW1lLmluZGV4T2YoUkVHRU5FUkFUT1JfUlVOVElNRSkgIT09IDAgJiZcbiAgICAgICAgICAgICAgICAgICBmaWxlbmFtZS5pbmRleE9mKFNPVVJDRV9NQVBfU1VQUE9SVCkgPCAwO1xuXG4gICAgICAgIGlmIChwYXNzKVxuICAgICAgICAgICAgcGFzc2VkRnJhbWVzQ291bnQrKztcblxuICAgICAgICByZXR1cm4gcGFzcztcbiAgICB9O1xufVxuIl19
